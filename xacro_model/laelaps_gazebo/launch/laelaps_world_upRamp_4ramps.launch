<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="physics" default="ode"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find laelaps_gazebo)/worlds/laelaps_upRamp_10deg_4ramps.world"/>
    <arg name="physics" value="$(arg physics)"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find laelaps_description)/urdf/laelaps.xacro'" />

  <!-- Load the configuration file for the algorithm and environment parameters-->
  <rosparam command="load" file="$(find training_system)/config/env_ellipse_4ramps.yaml" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model laelaps -x 0 -y 0.0 -z 0.16 -param robot_description"/>

  <!-- ros_control laelaps launch file -->
  <include file="$(find laelaps_control)/launch/laelaps_control.launch"/>

</launch>
